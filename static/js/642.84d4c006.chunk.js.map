{"version":3,"file":"static/js/642.84d4c006.chunk.js","mappings":"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","sources":["pages/Detail.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport {Context1} from './../App.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addProduct } from '../store.jsx';\r\n\r\n\r\n\r\n\r\nfunction Detail(props) {\r\n\r\n \r\n\r\n  let state = useSelector((state)=> {return state});\r\n  let dispatch = useDispatch();\r\n\r\n  // 보관함을 해체해주는 작업\r\n  let {재고, shoes} = useContext(Context1);\r\n  \r\n  let [count, setCount] = useState(0);\r\n  let {id} = useParams();\r\n  let findProduct = props.shoes.find(x => x.id == id);\r\n  \r\n  let [alert, setAlert] = useState(true);\r\n  let [tab, setTab] = useState(0);\r\n  let [fade2, setFade2] = useState();\r\n\r\n  let fundProduct = props.shoes.find(x => x.id == id);\r\n\r\n  let [textCheck, setTextCheck] = useState('');\r\n  // useEffect를 쓰는 이유\r\n  // useEffect 안에 있는 코드는 html렌더링 후에 동작한다.\r\n  // 더 효율적으로 동작함 ui가 먼저 렌더링되고 작업이되면 더 빠른 느낌이 들잖아\r\n  useEffect(()=>{\r\n    // 장착될때 , 업데이트 될때 실행됨\r\n    let a = setTimeout(()=>{setAlert(false)}, 2000)\r\n    console.log(2);\r\n\r\n    setFade2('end');\r\n\r\n    // useEffect 내부에 있는 return은 useEffect 동작 전에 실행되는 코드임\r\n    return ()=>{\r\n      // 타이머같은 거 있을 때 기존타이머를 데거해주세요 이런 코드 사용하는데 유용함\r\n      // 서버로 데이터 요청할 때 재랜더링이 되면 요청이 끝나기전에 또 랜더링이되고\r\n      // 그러면 버그가 발생할텐데 이러한 상황을 방지할 수 있음\r\n\r\n      // return 내부에 있는 코드는 마운트될때는 실행되지 않고 언마운트될때는 또 실행함\r\n      console.log(1);\r\n      clearTimeout(a);\r\n\r\n      setFade2('');\r\n\r\n      // let changeObj = JSON.stringify({'title':findProduct.title, 'content': findProduct.content, 'price' : findProduct.price});\r\n\r\n      // 하나의 로컬스토리지에 데이터를 여러개 관리하고 싶다면 arry자료형안에 object를 넣어서 사용\r\n      // let changeObj = JSON.stringify([findProduct]);\r\n      // localStorage.setItem('watched',changeObj);\r\n\r\n      // localstorage 데이터 꺼내서 수정해보기\r\n      let 꺼낸거 = localStorage.getItem('watched');\r\n      꺼낸거 = JSON.parse(꺼낸거);\r\n\r\n      꺼낸거.push(findProduct.id);\r\n\r\n      \r\n      // 저장된 데이터 중 중복을 제거해주는 기능 -> new Set(대상)\r\n      꺼낸거 = new Set(꺼낸거);\r\n      // array자료형을 풀어서 set을 통해 중복을 제거해주고 다시 array로 묶어야함\r\n      꺼낸거 = Array.from(꺼낸거);\r\n\r\n\r\n      localStorage.setItem('watched', JSON.stringify(꺼낸거));\r\n    }\r\n  },[])\r\n  // 위에 count를 넣어주면 useEffect가 작동되는 시점을 설정하는 것으로 볼 수 있음\r\n  // 그렇게 되면 useEffect는 처음 컴포넌트가 마운트될때에도 실행되기에 \r\n  // 작동이 되는 것임\r\n  \r\n  // 위의 컴포넌트가 마운트될때만 실행시키고 싶다면 디팬던시 안을 비워두면 그렇게 동작됨([] 이거를 안쓰면 마운트될때와 업데이트될때 실행됨)\r\n\r\nuseEffect(()=>{\r\n  if (isNaN(textCheck) == true){\r\n    console.log(\"문자를 입력한 거야? 안돼!!\");\r\n  }\r\n},[textCheck])\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={`container start ${fade2}`}>\r\n        {\r\n          alert == true ? \r\n          <div className='alert alert-warning'>\r\n            2초이내 구매시 할인\r\n          </div> : null\r\n        }\r\n        {재고}\r\n          \r\n        {count}\r\n        <button onClick={()=>{setCount(count+1)}}>button</button>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={`https://codingapple1.github.io/shop/shoes${findProduct.id+1}.jpg`} width=\"100%\" />\r\n          </div>\r\n\r\n          <input type='text' style={{width:'200px'}} \r\n          onChange={(e)=>{setTextCheck(e.target.value)}}\r\n          ></input>\r\n\r\n          <div className=\"col-md-6\">\r\n            <h4 className=\"pt-5\">{findProduct.title}</h4>\r\n            <p>{findProduct.content}</p>\r\n            <p>{findProduct.price}</p>\r\n            <button className=\"btn btn-danger\" onClick={()=>{\r\n              dispatch(addProduct({id:1, name:findProduct.title, count:1}));\r\n            }}>주문하기</button> \r\n          </div>\r\n        </div>\r\n        <Nav variant=\"tabs\"  defaultActiveKey=\"link0\">\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link0\" onClick={()=>{setTab(0)}}>버튼0</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link1\" onClick={()=>{setTab(1)}}>버튼1</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link2\" onClick={()=>{setTab(2)}}>버튼2</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n        <TabContent tabb={tab}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction TabContent({tabb}){\r\n  // if (props == 0){\r\n  //   return <div>내용0</div>\r\n  // }else if(props == 1){\r\n  //   return <div>내용1</div>\r\n  // }else{\r\n  //   return <div>내용2</div> \r\n  // }\r\n\r\n  // 위 조건문과 동일한 코드\r\n\r\n  let [fade, setFade] = useState()\r\n\r\n  useEffect(()=>{\r\n    let a = setTimeout(()=>{setFade('end')},100)\r\n\r\n    return()=>{\r\n      clearTimeout(a);\r\n      setFade('')\r\n    }\r\n    \r\n  },[tabb])\r\n\r\n  return (<div className={`start ${fade}`}>\r\n    {[<div>내용0</div>,<div>내용1</div>,<div>내용2</div>][tabb]}\r\n  </div>)\r\n}\r\n\r\nexport default Detail;"],"names":["TabContent","_ref","tabb","fade","setFade","useState","useEffect","a","setTimeout","clearTimeout","_jsx","className","children","props","useSelector","state","dispatch","useDispatch","재고","shoes","useContext","Context1","count","setCount","id","useParams","findProduct","find","x","alert","setAlert","tab","setTab","fade2","setFade2","textCheck","setTextCheck","console","log","꺼낸거","localStorage","getItem","JSON","parse","push","Set","Array","from","setItem","stringify","isNaN","_jsxs","onClick","src","width","type","style","onChange","e","target","value","title","content","price","addProduct","name","Nav","variant","defaultActiveKey","Item","Link","eventKey"],"sourceRoot":""}